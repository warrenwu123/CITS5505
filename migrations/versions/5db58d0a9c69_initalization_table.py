"""initalization table

Revision ID: 5db58d0a9c69
Revises: 
Create Date: 2025-04-30 16:18:33.454047

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5db58d0a9c69'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('requirement', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievement'))
    )
    op.create_table('activity_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('calories_per_hour', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activity_type'))
    )
    op.create_table('goal_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goal_type'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('has_mfa', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_table('activity_type_plan_type',
    sa.Column('activity_type_id', sa.Integer(), nullable=False),
    sa.Column('goal_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_type_id'], ['activity_type.id'], name=op.f('fk_activity_type_plan_type_activity_type_id_activity_type')),
    sa.ForeignKeyConstraint(['goal_type_id'], ['goal_type.id'], name=op.f('fk_activity_type_plan_type_goal_type_id_goal_type')),
    sa.PrimaryKeyConstraint('activity_type_id', 'goal_type_id', name=op.f('pk_activity_type_plan_type'))
    )
    op.create_table('email_verification_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_email_verification_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_verification_token')),
    sa.UniqueConstraint('token', name=op.f('uq_email_verification_token_token'))
    )
    op.create_table('fitness_level_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_type_id', sa.Integer(), nullable=False),
    sa.Column('fitness_level', sa.Enum('beginner', 'novice', 'intermediate', 'advanced', 'elite', name='fitnesslevelenum'), nullable=False),
    sa.Column('weight_ratio', sa.Float(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=True),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('duration_minutes', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['activity_type_id'], ['activity_type.id'], name=op.f('fk_fitness_level_config_activity_type_id_activity_type')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_fitness_level_config'))
    )
    op.create_table('follow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('follow_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], name=op.f('fk_follow_followed_id_user')),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name=op.f('fk_follow_follower_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_follow'))
    )
    op.create_table('goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('fitness_level', sa.Enum('beginner', 'novice', 'intermediate', 'advanced', 'elite', name='fitnesslevelenum'), nullable=False),
    sa.Column('activity_type_id', sa.Integer(), nullable=False),
    sa.Column('goal_type_id', sa.Integer(), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('available_time_per_week', sa.Float(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['activity_type_id'], ['activity_type.id'], name=op.f('fk_goal_activity_type_id_activity_type')),
    sa.ForeignKeyConstraint(['goal_type_id'], ['goal_type.id'], name=op.f('fk_goal_goal_type_id_goal_type')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_goal_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goal'))
    )
    op.create_table('mfa_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=6), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_mfa_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mfa_token'))
    )
    op.create_table('password_reset_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_password_reset_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password_reset_token')),
    sa.UniqueConstraint('token', name=op.f('uq_password_reset_token_token'))
    )
    op.create_table('user_achievement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievement.id'], name=op.f('fk_user_achievement_achievement_id_achievement')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_achievement_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_achievement'))
    )
    op.create_table('activity_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type_id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=True),
    sa.Column('goal_type_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Interval(), nullable=True),
    sa.Column('calories_burned', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['activity_type_id'], ['activity_type.id'], name=op.f('fk_activity_session_activity_type_id_activity_type')),
    sa.ForeignKeyConstraint(['goal_id'], ['goal.id'], name=op.f('fk_activity_session_goal_id_goal')),
    sa.ForeignKeyConstraint(['goal_type_id'], ['goal_type.id'], name=op.f('fk_activity_session_goal_type_id_goal_type')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_activity_session_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activity_session'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activity_session')
    op.drop_table('user_achievement')
    op.drop_table('password_reset_token')
    op.drop_table('mfa_token')
    op.drop_table('goal')
    op.drop_table('follow')
    op.drop_table('fitness_level_config')
    op.drop_table('email_verification_token')
    op.drop_table('activity_type_plan_type')
    op.drop_table('user')
    op.drop_table('goal_type')
    op.drop_table('activity_type')
    op.drop_table('achievement')
    # ### end Alembic commands ###
